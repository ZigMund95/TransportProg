unit Unit8;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Grids, StdCtrls, Menus;

type
  TlistForm = class(TForm)
    GridD: TStringGrid;
    GridC: TStringGrid;
    Grid: TStringGrid;
    Edit1: TEdit;
    MainMenu1: TMainMenu;
    N1: TMenuItem;
    Button1: TButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure GridDrawCell(Sender: TObject; ACol, ARow: Integer;
      Rect: TRect; State: TGridDrawState);
    procedure FormResize(Sender: TObject);
    procedure GridSelectCell(Sender: TObject; ACol, ARow: Integer;
      var CanSelect: Boolean);
    procedure GridDblClick(Sender: TObject);
    procedure Edit1Change(Sender: TObject);
    procedure N1Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  listForm: TlistForm;
  Position: integer;

procedure loadGrid(Sender: TStringGrid);

implementation

uses Unit1, Unit4, Unit6, Unit2;

{$R *.dfm}

function LowerCaseKir(const S: string): string;
var
  Ch: Char;
  L: Integer;
  Source, Dest: PChar;
begin
  L := Length(S);
  SetLength(Result, L);
  Source := Pointer(S);
  Dest := Pointer(Result);
  while L <> 0 do
  begin
    Ch := Source^;
    if ((Ch >= 'A') and (Ch <= 'Z'))or((Ch >= 'А') and (Ch <= 'Я')) then Inc(Ch, 32);
    Dest^ := Ch;
    Inc(Source);
    Inc(Dest);
    Dec(L);
  end;
end;

procedure loadGrid(Sender: TStringGrid);
var i: integer;
begin
listForm.Grid.ColCount := Sender.ColCount;
listForm.Grid.RowCount := Sender.RowCount;
  for i := 0 to Sender.RowCount - 1 do
    listForm.Grid.Rows[i] := Sender.Rows[i];
end;


procedure TlistForm.FormClose(Sender: TObject; var Action: TCloseAction);
begin
if cardForm.Visible then
  cardForm.Enabled := true
else
  mainForm.Enabled := true;
end;

procedure TlistForm.FormCreate(Sender: TObject);
begin
GridD.ColCount := 16;
GridD.RowCount := 2;
GridC.ColCount := 33;
GridC.RowCount := 2;
Grid.Top := 32;

GridD.Cells[0,0] := ''; GridD.Cells[1,0] := 'IND';
GridD.Cells[2,0] := 'Ф.И.О.'; GridD.Cells[3,0] := 'Телефон 1';
GridD.Cells[4,0] := 'Телефон 2'; GridD.Cells[5,0] := 'Паспорт';
GridD.Cells[6,0] := 'Выдан'; GridD.Cells[7,0] := 'Дата выдачи';
GridD.Cells[8,0] := 'Адрес'; GridD.Cells[9,0] := '№ вод. удост';
GridD.Cells[10,0] := 'Тягач'; GridD.Cells[11,0] := 'Гос. номер';
GridD.Cells[12,0] := 'Прицеп'; GridD.Cells[13,0] := 'Объем';
GridD.Cells[14,0] := 'Гос. номер'; GridD.Cells[15,0] := 'Доп. инф.';

GridC.Cells[0,0] := ''; GridC.Cells[1,0] := 'IND';
GridC.Cells[2,0] := 'Фирма'; GridC.Cells[3,0] := 'код в АТИ';
GridC.Cells[4,0] := 'ИНН'; GridC.Cells[5,0] := 'КПП';
GridC.Cells[6,0] := 'ОГРН'; GridC.Cells[7,0] := 'р/счет';
GridC.Cells[8,0] := 'банк'; GridC.Cells[9,0] := 'БИК';
GridC.Cells[10,0] := 'корр. счет'; GridC.Cells[11,0] := 'Руководитель';
GridC.Cells[12,0] := 'Ф.И.О.'; GridC.Cells[13,0] := 'Фирма-сателит';
GridC.Cells[14,0] := 'Фирма-сателит'; GridC.Cells[15,0] := 'Фирма-сателит';
GridC.Cells[16,0] := 'Юр. адрес'; GridC.Cells[17,0] := 'Почт. адрес';
GridC.Cells[18,0] := 'Имя 1'; GridC.Cells[19,0] := 'Телефон 1';
GridC.Cells[20,0] := 'Моб. телефон 1'; GridC.Cells[21,0] := 'ICQ 1';
GridC.Cells[22,0] := 'Имя 2'; GridC.Cells[23,0] := 'Телефон 2';
GridC.Cells[24,0] := 'Моб. телефон 2'; GridC.Cells[25,0] := 'ICQ 2';
GridC.Cells[26,0] := 'Имя 3'; GridC.Cells[27,0] := 'Телефон 3';
GridC.Cells[28,0] := 'Моб. телефон 3'; GridC.Cells[29,0] := 'ICQ 3';
end;

procedure TlistForm.GridDrawCell(Sender: TObject; ACol, ARow: Integer;
  Rect: TRect; State: TGridDrawState);
begin
ColumnWidthAlign(Sender);
end;

procedure TlistForm.FormResize(Sender: TObject);
begin
Grid.Height := listForm.ClientHeight - 40;
Grid.Width := listForm.ClientWidth - 16;
end;

procedure TlistForm.GridSelectCell(Sender: TObject; ACol, ARow: Integer;
  var CanSelect: Boolean);
begin RowSelected := ARow; end;

procedure TlistForm.GridDblClick(Sender: TObject);
var s: string;
    i: integer;
begin
listForm.Enabled := false;
if Grid.ColCount = GridD.ColCount then
  begin
    driversAddForm.Visible := true;
    for i := 0 to 14 do
      Unit1.DriveInf[i] := Grid.Cells[i+1,RowSelected];
    Unit4.loadDInfPage;
  end
else
  begin
    counterAddForm.Visible := true;
    for i := 0 to 30 do
      Unit1.CounterInf[i] := Grid.Cells[i+1,RowSelected];
    Unit6.loadCInfPage;
  end
end;

procedure TlistForm.Edit1Change(Sender: TObject);
var i: integer;
begin
if Grid.ColCount = GridD.ColCount then
begin
Grid.RowCount := 2;
Grid.Rows[1].Clear;
if edit1.Text = '' then
  for i := 1 to GridD.RowCount - 2 do
    begin
      Grid.Rows[Grid.RowCount-1] := GridD.Rows[i];
      Grid.RowCount := Grid.RowCount + 1;
    end
else
  for i := 1 to GridD.RowCount - 2 do
      if pos(lowerCaseKir(edit1.Text), lowerCaseKir(GridD.Cells[2,i])) = 1 then
        begin
          Grid.Rows[Grid.RowCount-1] := GridD.Rows[i];
          Grid.RowCount := Grid.RowCount + 1;
          Grid.Rows[Grid.RowCount-1].Clear;
        end
end
else
begin
Grid.RowCount := 2;
Grid.Rows[1].Clear;
if edit1.Text = '' then
  for i := 1 to GridC.RowCount - 2 do
    begin
      Grid.Rows[Grid.RowCount-1] := GridC.Rows[i];
      Grid.RowCount := Grid.RowCount + 1;
    end
else
  for i := 1 to GridC.RowCount - 2 do
      if pos(lowerCaseKir(edit1.Text), lowerCaseKir(GridC.Cells[2,i])) = 1 then
        begin
          Grid.Rows[Grid.RowCount-1] := GridC.Rows[i];
          Grid.RowCount := Grid.RowCount + 1;
          Grid.Rows[Grid.RowCount-1].Clear;
        end
end
end;

procedure TlistForm.N1Click(Sender: TObject);
var i: integer;
begin
listForm.Enabled := false;
RowSelected := -1;
if Grid.ColCount = GridD.ColCount then
  begin
    driversAddForm.Visible := true;
    for i := 0 to 14 do Unit1.DriveInf[i] := '';
    Unit4.loadDInfPage;
  end
else
  begin
    counterAddForm.Visible := true;
    for i := 0 to 30 do Unit1.CounterInf[i] := '';
    Unit6.loadCInfPage;
  end;
end;

procedure TlistForm.Button1Click(Sender: TObject);
begin
with SenderBox as TComboBox do
begin
Text := Grid.Cells[2,RowSelected];
case Tag of
4: cardForm.Edit1.
11:
15:
begin
  cardForm.Edit13.Text := Grid.Cells[3,RowSelected];
  cardForm.Edit31.Text := Grid.Cells[4,RowSelected];
  cardForm.Edit14.Text := Grid.Cells[11,RowSelected];
end

end;

end.
